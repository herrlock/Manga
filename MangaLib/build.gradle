logger.info ' >> MangaLib'

description = 'The central library for this application containing all general implementations of the downloader.'

dependencies {
	// utilities
	api 'com.google.guava:guava:27.1-jre'
	api 'org.glassfish:javax.json:1.1.4'
	api 'com.google.code.gson:gson:2.8.0'
	
	// logging
	api 'org.apache.logging.log4j:log4j-api:2.11.2'
	runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.2'
	
	// IO
	implementation 'org.jsoup:jsoup:1.11.3'
	implementation 'org.eclipse.jetty:jetty-client:9.4.17.v20190418'
	
	// embed jetty
	implementation 'org.eclipse.jetty:jetty-server:9.4.17.v20190418'
	implementation 'org.eclipse.jetty:jetty-security:9.4.17.v20190418'
	
	// compressing and archiving files
	implementation 'org.apache.commons:commons-compress:1.18'
	
	// ServiceLoader-annotations
	compileOnly 'com.google.auto.service:auto-service:1.0-rc5'
	annotationProcessor 'com.google.auto.service:auto-service:1.0-rc5'
	
}

pmdMain.ignoreFailures = true
/*
TODO: fix PMD-warnings
pmdMain.doLast {
	assertPmdErrors pmdMain, [
		[clazz:'de.herrlock.manga.http.jetty.JettyServer', method: 'start', rule:'AvoidCatchingGenericException'],
		[clazz:'de.herrlock.manga.http.jetty.JettyServer', method: 'stop', rule:'AvoidCatchingGenericException'],
		[clazz:'de.herrlock.manga.jd.Crawljob', method: 'export', rule:'InsufficientStringBufferDeclaration'],
		[clazz:'de.herrlock.manga.util.', method: '', rule:'GodClass'],
		[clazz:'de.herrlock.manga.util.Utils', method: '', rule:'AvoidCatchingGenericException']
	]
}
*/
pmdTest.ignoreFailures = true
/*
pmdTest.doLast {
	assertPmdErrors pmdTest, [
		[clazz:'de.herrlock.manga.DummyServer', method: 'start', rule:'SignatureDeclareThrowsException'],
		[clazz:'de.herrlock.manga.DummyServer', method: 'stop', rule:'SignatureDeclareThrowsException'],
		[clazz:'de.herrlock.manga.util.TestUtils', method: 'testExecuteHttpGet', rule:'SignatureDeclareThrowsException']
	]
}
*/
